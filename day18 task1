package com.example;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class DatabaseConnectionManager {

    // Step 1: Private static instance of the class
    private static DatabaseConnectionManager instance;

    // Step 2: Database connection details
    private static final String URL = "jdbc:mysql://localhost:3306/your_database";
    private static final String USER = "your_username";
    private static final String PASSWORD = "your_password";

    // Step 3: Database connection object
    private Connection connection;

    // Step 4: Private constructor to prevent instantiation
    private DatabaseConnectionManager() {
        try {
            // Load the JDBC driver (not always necessary for newer drivers)
            Class.forName("com.mysql.cj.jdbc.Driver");
            // Initialize the connection
            this.connection = DriverManager.getConnection(URL, USER, PASSWORD);
            System.out.println("Database connection established.");
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
            throw new RuntimeException("Failed to connect to the database", e);
        }
    }

    // Step 5: Public method to provide access to the instance
    public static synchronized DatabaseConnectionManager getInstance() {
        if (instance == null) {
            instance = new DatabaseConnectionManager();
        }
        return instance;
    }

    // Method to get the database connection
    public Connection getConnection() {
        return connection;
    }

    // Example method to simulate closing the database connection
    public void disconnect() {
        if (connection != null) {
            try {
                connection.close();
                System.out.println("Database connection closed.");
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
}

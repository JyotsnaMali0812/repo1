// Define the Pair class
public class Pair<T, U> {
    private T first;
    private U second;

    // Constructor
    public Pair(T first, U second) {
        this.first = first;
        this.second = second;
    }

    // Getter for first
    public T getFirst() {
        return first;
    }

    // Getter for second
    public U getSecond() {
        return second;
    }

    // Method to return a reversed version of the pair
    public Pair<U, T> reverse() {
        return new Pair<>(second, first);
    }

    // Override toString() for easy printing
    @Override
    public String toString() {
        return "(" + first + ", " + second + ")";
    }

    // Main method for testing
    public static void main(String[] args) {
        Pair<Integer, String> originalPair = new Pair<>(1, "one");
        System.out.println("Original Pair: " + originalPair);

        Pair<String, Integer> reversedPair = originalPair.reverse();
        System.out.println("Reversed Pair: " + reversedPair);
    }
}
